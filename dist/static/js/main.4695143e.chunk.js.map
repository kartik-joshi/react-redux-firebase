{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Notifications.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","components/projects/UpdateProject.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","className","NavLink","to","onClick","profile","initials","SignedOutLinks","state","firebase","links","uid","layout_SignedInLinks","layout_SignedOutLinks","Link","ProjectSummary","_ref","project","title","authorFirstName","authorLastName","moment","createdAt","toDate","calendar","ProjectList","projects","map","id","key","projects_ProjectSummary","Notifications","notifications","item","user","content","time","fromNow","Dashboard","_this$props","this","projects_ProjectList","dashboard_Notifications","Redirect","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","_Component","_getPrototypeOf2","_this","Object","classCallCheck","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","email","password","handleChange","e","setState","objectSpread","defineProperty","target","value","handleSubmit","preventDefault","signIn","inherits","createClass","authError","onSubmit","htmlFor","onChange","creds","creadentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","authorId","add","Date","UpdateProject","flag","newProject","updateProject","mapStateToProps","mapDispatchToProps","App","BrowserRouter","layout_Navbar","Switch","Route","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","undefined","action","console","log","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"gQAiCeA,cAAQ,KANI,SAACC,GACxB,MAAO,CACHC,QAAU,kBAAMD,ECdb,SAACA,EAAUE,EAAXC,IACYC,EAD2BD,EAAjBC,eAGlBC,OAAOJ,UAAUK,KAAK,WAC7BN,EAAS,CAAEO,KAAM,2BDcVR,CA5BQ,SAACS,GACpB,OACIC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SACVH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASC,GAAK,WAAd,gBACJL,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGI,QAAUP,EAAMP,SAAnB,YACJQ,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASC,GAAK,IAAIF,UAAY,8BAA9B,IAA6DJ,EAAMQ,QAAQC,eEWhFC,EAnBS,WACpB,OACIT,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SACVH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASC,GAAK,WAAd,YACJL,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASC,GAAK,WAAd,cCqBLf,cAPS,SAACoB,GACrB,MAAQ,CACJd,KAAOc,EAAMC,SAASf,KACtBW,QAAUG,EAAMC,SAASJ,UAIlBjB,CAvBA,SAACS,GAAU,IACfH,EAAiBG,EAAjBH,KAAKW,EAAYR,EAAZQ,QACNK,EAAShB,EAAKiB,IAAOb,EAAAC,EAAAC,cAACY,EAAD,CAAeP,QAAWA,IAAeP,EAAAC,EAAAC,cAACa,EAAD,MACpE,OACQf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAMX,GAAI,IAAIF,UAAY,cAA1B,gBAICS,+DCFNK,EAZQ,SAAAC,GAAc,IAAZC,EAAYD,EAAZC,QACrB,OACInB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kCACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wCACPH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAcgB,EAAQC,OACtCpB,EAAAC,EAAAC,cAAA,sBAAciB,EAAQE,gBAAtB,IAAwCF,EAAQG,gBAChDtB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAaoB,IAAOJ,EAAQK,UAAUC,UAAUC,eCSlEC,EAbK,SAAAT,GAAgB,IAAdU,EAAcV,EAAdU,SACrB,OACG5B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACVyB,GAAYA,EAASC,IAAI,SAAAV,GAClB,OACQnB,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAMX,GAAI,YAAcc,EAAQW,GAAIC,IAAOZ,EAAQW,IAC3C9B,EAAAC,EAAAC,cAAC8B,EAAD,CAAgBb,QAAWA,SCiB5Cc,EAzBO,SAAClC,GAAU,IACtBmC,EAAiBnC,EAAjBmC,cACP,OACIlC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAhB,iBAGAH,EAAAC,EAAAC,cAAA,MAAIC,UAAY,iBACF+B,GAAiBA,EAAcL,IAAI,SAAAM,GACzB,OAAOnC,EAAAC,EAAAC,cAAA,MAAI6B,IAAKI,EAAKL,IACT9B,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAagC,EAAKC,KAAlC,MACApC,EAAAC,EAAAC,cAAA,YAAOiC,EAAKE,SACZrC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBAAuBoB,IAAOY,EAAKG,KAAKb,UAAUc,4CCRnHC,mLACK,IAAAC,EACmCC,KAAK3C,MAAvC6B,EADDa,EACCb,SAAUhC,EADX6C,EACW7C,KAAOsC,EADlBO,EACkBP,cACzB,OAAKtC,EAAKiB,IAERb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAACyC,EAAD,CAAaf,SAAUA,KAEzB5B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACbH,EAAAC,EAAAC,cAAC0C,EAAD,CAAeV,cAAiBA,OARlBlC,EAAAC,EAAAC,cAAC2C,EAAA,EAAD,CAAUxC,GAAK,mBAHjByC,aA2BTC,cACbzD,YATsB,SAACoB,GACvB,MAAO,CACLkB,SAAUlB,EAAMsC,UAAUC,QAAQrB,SAClChC,KAAOc,EAAMC,SAASf,KACtBsC,cAAgBxB,EAAMsC,UAAUC,QAAQf,iBAM1CgB,2BAAiB,CACf,CAAEC,WAAY,WAAaC,QAAU,CAAC,YAAY,SAClD,CAAED,WAAY,gBAAiBE,MAAQ,EAAGD,QAAU,CAAC,OAAO,WAJjDL,CAMbP,GCUaO,cACbzD,YAZsB,SAACoB,EAAO4C,GAC9B,IAAMxB,EAAKwB,EAASC,MAAMC,OAAO1B,GAC3BF,EAAWlB,EAAMsC,UAAUS,KAAK7B,SAEtC,MAAO,CACLT,QAFcS,EAAWA,EAASE,GAAM,KAGxClC,KAAOc,EAAMC,SAASf,KACtBkC,QAMFoB,2BAAiB,CAAC,CAChBC,WAAY,cAHDJ,CA3CQ,SAAChD,GAAU,IACxBoB,EAAqBpB,EAArBoB,QAAQvB,EAAaG,EAAbH,KAAOkC,EAAM/B,EAAN+B,GACvB,OAAKlC,EAAKiB,IACNM,EAEAnB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qCACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAcgB,EAAQC,OACtCpB,EAAAC,EAAAC,cAAA,SAAIiB,EAAQkB,SACZrC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAMX,GAAI,kBAAoByB,GAC1B9B,EAAAC,EAAAC,cAAA,UAAQC,UAAU,4BAAlB,aAIRH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wCACbH,EAAAC,EAAAC,cAAA,wBAAgBiB,EAAQE,gBAAxB,IAA0CF,EAAQG,gBAClDtB,EAAAC,EAAAC,cAAA,WAAMqB,IAAOJ,EAAQK,UAAUC,UAAUC,eAO/C1B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,gCAxBgBF,EAAAC,EAAAC,cAAC2C,EAAA,EAAD,CAAUxC,GAAK,8BCL1BqD,EAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAApB,KAAAgB,GAAA,QAAAM,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAR,EAAAC,OAAAQ,EAAA,EAAAR,CAAApB,MAAAkB,EAAAE,OAAAS,EAAA,EAAAT,CAAAJ,IAAAc,KAAAC,MAAAb,EAAA,CAAAlB,MAAAgC,OAAAP,MACEzD,MAAQ,CACNiE,MAAQ,GACRC,SAAW,IAHff,EAKEgB,aAAe,SAACC,GACdjB,EAAKkB,SAALjB,OAAAkB,EAAA,EAAAlB,CAAA,GACOD,EAAKnD,MADZoD,OAAAmB,EAAA,EAAAnB,CAAA,GAEKgB,EAAEI,OAAOpD,GAAMgD,EAAEI,OAAOC,UARjCtB,EAWEuB,aAAe,SAACN,GACdA,EAAEO,iBACFxB,EAAK9D,MAAMuF,OAAOzB,EAAKnD,QAb3BmD,EAAA,OAAAC,OAAAyB,EAAA,EAAAzB,CAAAJ,EAAAC,GAAAG,OAAA0B,EAAA,EAAA1B,CAAAJ,EAAA,EAAA3B,IAAA,SAAAoD,MAAA,WAeW,IAAA1C,EACsBC,KAAK3C,MAA1B0F,EADDhD,EACCgD,UACR,OAFOhD,EACY7C,KACViB,IAAYb,EAAAC,EAAAC,cAAC2C,EAAA,EAAD,CAAUxC,GAAK,MAElCL,EAAAC,EAAAC,cAAA,OAAKC,UAAW,aACdH,EAAAC,EAAAC,cAAA,QAAOwF,SAAYhD,KAAK0C,aAAcjF,UAAU,SAC5CH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,2BAAd,WACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAOyF,QAAQ,SAAf,SACA3F,EAAAC,EAAAC,cAAA,SAAOJ,KAAK,QAAQgC,GAAK,QAAQ8D,SAAYlD,KAAKmC,gBAEtD7E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAOyF,QAAQ,YAAf,YACA3F,EAAAC,EAAAC,cAAA,SAAOJ,KAAK,WAAWgC,GAAK,WAAW8D,SAAYlD,KAAKmC,gBAE5D7E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,4BAAlB,UAEJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACZsF,EACGzF,EAAAC,EAAAC,cAAA,SAAIuF,GACN,YApChB/B,EAAA,CAA4BZ,aA2DbxD,cAdS,SAACoB,GACvB,MAAM,CACJ+E,UAAY/E,EAAMd,KAAK6F,UACvB7F,KAAOc,EAAMC,SAASf,OAGC,SAACL,GAC1B,MAAO,CACL+F,OAAS,SAACO,GAAD,OAAWtG,GR1DAuG,EQ0DgBD,ERzD9B,SAACtG,EAASE,EAAVyB,IACevB,EADsBuB,EAAjBvB,eAEbC,OAAOmG,2BACZD,EAAanB,MACbmB,EAAalB,UACf/E,KAAK,WACHN,EAAS,CAACO,KAAM,oBACjBkG,MAAM,SAAAC,GACL1G,EAAS,CAACO,KAAK,gBAAgBmG,aATpB,IAACH,KQgETxG,CAA4CoE,GC3D9CwC,EAAb,SAAAvC,GAAA,SAAAuC,IAAA,IAAAtC,EAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAApB,KAAAwD,GAAA,QAAAlC,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAR,EAAAC,OAAAQ,EAAA,EAAAR,CAAApB,MAAAkB,EAAAE,OAAAS,EAAA,EAAAT,CAAAoC,IAAA1B,KAAAC,MAAAb,EAAA,CAAAlB,MAAAgC,OAAAP,MACEzD,MAAQ,CACNiE,MAAQ,GACRC,SAAW,GACXuB,UAAY,GACZC,SAAW,IALfvC,EAOEgB,aAAe,SAACC,GACdjB,EAAKkB,SAALjB,OAAAkB,EAAA,EAAAlB,CAAA,GACOD,EAAKnD,MADZoD,OAAAmB,EAAA,EAAAnB,CAAA,GAEKgB,EAAEI,OAAOpD,GAAMgD,EAAEI,OAAOC,UAVjCtB,EAaEuB,aAAe,SAACN,GACdA,EAAEO,iBACFxB,EAAK9D,MAAMsG,OAAOxC,EAAKnD,QAf3BmD,EAAA,OAAAC,OAAAyB,EAAA,EAAAzB,CAAAoC,EAAAvC,GAAAG,OAAA0B,EAAA,EAAA1B,CAAAoC,EAAA,EAAAnE,IAAA,SAAAoD,MAAA,WAiBW,IAAA1C,EACsBC,KAAK3C,MAA1BH,EADD6C,EACC7C,KAAM6F,EADPhD,EACOgD,UACd,OAAI7F,EAAKiB,IAAYb,EAAAC,EAAAC,cAAC2C,EAAA,EAAD,CAAUxC,GAAK,MAGlCL,EAAAC,EAAAC,cAAA,OAAKC,UAAW,aACdH,EAAAC,EAAAC,cAAA,QAAOwF,SAAYhD,KAAK0C,aAAcjF,UAAU,SAC5CH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,2BAAd,WACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAOyF,QAAQ,aAAf,cACA3F,EAAAC,EAAAC,cAAA,SAAOJ,KAAK,OAAOgC,GAAK,YAAY8D,SAAYlD,KAAKmC,gBAEzD7E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAOyF,QAAQ,YAAf,aACA3F,EAAAC,EAAAC,cAAA,SAAOJ,KAAK,OAAOgC,GAAK,WAAW8D,SAAYlD,KAAKmC,gBAExD7E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAOyF,QAAQ,SAAf,SACA3F,EAAAC,EAAAC,cAAA,SAAOJ,KAAK,QAAQgC,GAAK,QAAQ8D,SAAYlD,KAAKmC,gBAEtD7E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAOyF,QAAQ,YAAf,YACA3F,EAAAC,EAAAC,cAAA,SAAOJ,KAAK,WAAWgC,GAAK,WAAW8D,SAAYlD,KAAKmC,gBAE5D7E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,4BAAlB,WACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACZsF,EAAazF,EAAAC,EAAAC,cAAA,SAAIuF,GAAiB,aA5CrDS,EAAA,CAA4BpD,aAiEbxD,cAbS,SAACoB,GACvB,MAAM,CACJd,KAAOc,EAAMC,SAASf,KACtB6F,UAAY/E,EAAMd,KAAK6F,YAIA,SAAClG,GAC1B,MAAM,CACJ8G,OAAS,SAACC,GAAD,OAAa/G,ET1CJ,SAAC+G,GACnB,OAAM,SAAC/G,EAASE,EAAV8G,GAAkD,IAA9B5G,EAA8B4G,EAA9B5G,YAAY6G,EAAkBD,EAAlBC,aAC5B7F,EAAWhB,IACXqD,EAAawD,IACnB7F,EAASf,OAAO6G,+BACZH,EAAQ3B,MAAM2B,EAAQ1B,UACxB/E,KAAK,SAAC6G,GACJ,OAAO1D,EAAUG,WAAW,SAASwD,IAAID,EAAKtE,KAAKvB,KAAK+F,IAAI,CACxDT,UAAYG,EAAQH,UACpBC,SAAWE,EAAQF,SACnB5F,SAAW8F,EAAQH,UAAU,GAAKG,EAAQF,SAAS,OAExDvG,KAAK,kBAAIN,EAAS,CAACO,KAAO,qBAC5BkG,MAAM,SAAAC,GACH1G,EAAS,CAACO,KAAK,iBAAiBmG,WS4BTI,CAAQC,OAI5BhH,CAA4C4G,GCjE9CW,EAAb,SAAAlD,GAAA,SAAAkD,IAAA,IAAAjD,EAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAApB,KAAAmE,GAAA,QAAA7C,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAR,EAAAC,OAAAQ,EAAA,EAAAR,CAAApB,MAAAkB,EAAAE,OAAAS,EAAA,EAAAT,CAAA+C,IAAArC,KAAAC,MAAAb,EAAA,CAAAlB,MAAAgC,OAAAP,MACEzD,MAAQ,CACNU,MAAQ,GACRiB,QAAS,IAHbwB,EAKEgB,aAAe,SAACC,GACdjB,EAAKkB,SAALjB,OAAAkB,EAAA,EAAAlB,CAAA,GACOD,EAAKnD,MADZoD,OAAAmB,EAAA,EAAAnB,CAAA,GAEKgB,EAAEI,OAAOpD,GAAMgD,EAAEI,OAAOC,UARjCtB,EAWEuB,aAAe,SAACN,GACdA,EAAEO,iBACFxB,EAAK9D,MAAM+G,cAAcjD,EAAKnD,OAC9BmD,EAAK9D,MAAMgH,QAAQC,KAAK,MAd5BnD,EAAA,OAAAC,OAAAyB,EAAA,EAAAzB,CAAA+C,EAAAlD,GAAAG,OAAA0B,EAAA,EAAA1B,CAAA+C,EAAA,EAAA9E,IAAA,SAAAoD,MAAA,WAkBI,OADiBzC,KAAK3C,MAAdH,KACEiB,IAERb,EAAAC,EAAAC,cAAA,OAAKC,UAAW,aACdH,EAAAC,EAAAC,cAAA,QAAOwF,SAAYhD,KAAK0C,aAAcjF,UAAU,SAC5CH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,2BAAd,kBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAOyF,QAAQ,SAAf,SACA3F,EAAAC,EAAAC,cAAA,SAAOJ,KAAK,OAAOgC,GAAK,QAAQ8D,SAAYlD,KAAKmC,gBAErD7E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAOyF,QAAQ,WAAf,mBACA3F,EAAAC,EAAAC,cAAA,YAAU4B,GAAG,UAAU3B,UAAU,uBAAuByF,SAAYlD,KAAKmC,gBAE7E7E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,4BAAlB,aAdUH,EAAAC,EAAAC,cAAC2C,EAAA,EAAD,CAAUxC,GAAK,gBAlBzCwG,EAAA,CAAmC/D,aAoDpBxD,cAZS,SAACoB,GACvB,MAAO,CACLd,KAAQc,EAAMC,SAASf,OAIA,SAACL,GAC1B,MAAO,CACLuH,cAAgB,SAAC3F,GAAD,OAAa5B,ECrDJ,SAAC4B,GAC1B,OAAO,SAAC5B,EAASE,EAAVyB,GAAiDA,EAA7BvB,YAA6B,IAC9CqD,GAAawD,EADiCtF,EAAjBsF,gBAE7BjG,EAAUd,IAAWkB,SAASJ,QAC9B0G,EAAWxH,IAAWkB,SAASf,KAAKiB,IAC1CmC,EAAUG,WAAW,YAAY+D,IAAjCpD,OAAAkB,EAAA,EAAAlB,CAAA,GACK3C,EADL,CAEEE,gBAAkBd,EAAQ4F,UAC1B7E,eAAiBf,EAAQ6F,SACzBa,SAAWA,EACXzF,UAAY,IAAI2F,QACftH,KAAK,WACNN,EAAS,CAACO,KAAK,iBAAiBqB,cAC/B6E,MAAM,SAACC,GACR1G,EAAS,CAACO,KAAO,uBAAuBmG,WDuCRa,CAAc3F,OAIzC7B,CAA4CuH,GElD9CO,EAAb,SAAAzD,GAAA,SAAAyD,IAAA,IAAAxD,EAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAApB,KAAA0E,GAAA,QAAApD,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAR,EAAAC,OAAAQ,EAAA,EAAAR,CAAApB,MAAAkB,EAAAE,OAAAS,EAAA,EAAAT,CAAAsD,IAAA5C,KAAAC,MAAAb,EAAA,CAAAlB,MAAAgC,OAAAP,MACEzD,MAAQ,CACNS,QAAS,GACTkG,MAAO,GAHXxD,EAKEgB,aAAe,SAACC,GACd,IAAMwC,EAAazD,EAAKnD,MAAMS,QAC9BmG,EAAWxC,EAAEI,OAAOpD,IAAMgD,EAAEI,OAAOC,MACnCtB,EAAKkB,SAALjB,OAAAkB,EAAA,EAAAlB,CAAA,GACOD,EAAKnD,MADZ,CAEIS,QAAUmG,MAVlBzD,EAaEuB,aAAe,SAACN,GACdA,EAAEO,iBACFxB,EAAK9D,MAAMwH,cAAc1D,EAAKnD,OAC9BmD,EAAK9D,MAAMgH,QAAQC,KAAK,YAAYnD,EAAKnD,MAAMS,QAAQW,KAhB3D+B,EAAA,OAAAC,OAAAyB,EAAA,EAAAzB,CAAAsD,EAAAzD,GAAAG,OAAA0B,EAAA,EAAA1B,CAAAsD,EAAA,EAAArF,IAAA,SAAAoD,MAAA,WAkBW,IAAA1C,EACoBC,KAAK3C,MAAzBH,EADA6C,EACA7C,KAAKuB,EADLsB,EACKtB,QAAQW,EADbW,EACaX,GACpB,OAAKlC,EAAKiB,IACNM,GACEuB,KAAKhC,MAAM2G,OACb3E,KAAKhC,MAAMS,QAAUA,EACrBuB,KAAKhC,MAAMS,QAAQW,GAAIA,EACvBY,KAAKhC,MAAM2G,MAAO,GAGpBrH,EAAAC,EAAAC,cAAA,OAAKC,UAAW,aACdH,EAAAC,EAAAC,cAAA,QAAOwF,SAAYhD,KAAK0C,aAAcjF,UAAU,SAC5CH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,2BAAd,kBACAH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAOyF,QAAQ,SAAf,SACA3F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,SAAOJ,KAAK,OAAOgC,GAAK,QAAQ8D,SAAYlD,KAAKmC,aAAcM,MAASzC,KAAKhC,MAAMS,QAAQC,SAE7FpB,EAAAC,EAAAC,cAAA,SAAOyF,QAAQ,WAAf,mBACA3F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,YAAU4B,GAAG,UAAU3B,UAAU,uBAAuByF,SAAYlD,KAAKmC,aAAcM,MAASzC,KAAKhC,MAAMS,QAAQkB,WAEvHrC,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,4BAAlB,cAOVH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,gCA9BkBF,EAAAC,EAAAC,cAAC2C,EAAA,EAAD,CAAUxC,GAAK,gBApBzC+G,EAAA,CAAmCtE,aAyD7B0E,EAAkB,SAAC9G,EAAM4C,GAC7B,IAAMxB,EAAKwB,EAASC,MAAMC,OAAO1B,GAC3BF,EAAWlB,EAAMsC,UAAUS,KAAK7B,SAChCT,EAAUS,EAAWA,EAASE,GAAM,KAC1C,MAAO,CACLlC,KAAQc,EAAMC,SAASf,KACvBuB,QAAUA,EACVW,GAAKA,IAIH2F,EAAqB,SAAClI,GAC1B,MAAO,CACLgI,cAAgB,SAACpG,GAAD,OAAa5B,GD1DHmB,EC0D0BS,EDzD/C,SAAC5B,EAASE,EAAVC,GAAiDA,EAA7BC,aACJ6G,EADiC9G,EAAjB8G,gBAEbrD,WAAW,YAAYwD,IAAIjG,EAAMS,QAAQW,IAC3D8E,IAAIlG,EAAMS,SACbtB,KAAMN,EAAS,CAACO,KAAK,oBACrBkG,MAAM,SAACC,GACN1G,EAAS,CAACO,KAAO,uBAAuBmG,aAPnB,IAACvF,KC8DfqC,cACbzD,YAAQkI,EAAgBC,GACxBnI,YAAQkI,EAAgBC,GACxBvE,2BAAiB,CAAC,CAChBC,WAAa,cAJFJ,CAMZqE,GCzDYM,MApBf,WACE,OACE1H,EAAAC,EAAAC,cAACyH,EAAA,EAAD,KACE3H,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,cAChBH,EAAAC,EAAAC,cAAC0H,EAAD,MACA5H,EAAAC,EAAAC,cAAC2H,EAAA,EAAD,KACE7H,EAAAC,EAAAC,cAAC4H,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAO,IAAIC,UAAazF,IACrCxC,EAAAC,EAAAC,cAAC4H,EAAA,EAAD,CAAOE,KAAO,eAAeC,UAAaC,IAC1ClI,EAAAC,EAAAC,cAAC4H,EAAA,EAAD,CAAOE,KAAM,UAAUC,UAAavE,IACpC1D,EAAAC,EAAAC,cAAC4H,EAAA,EAAD,CAAOE,KAAM,UAAUC,UAAa/B,IACpClG,EAAAC,EAAAC,cAAC4H,EAAA,EAAD,CAAOE,KAAM,UAAUC,UAAapB,IACpC7G,EAAAC,EAAAC,cAAC4H,EAAA,EAAD,CAAOE,KAAM,qBAAqBC,UAAab,SCVvCe,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS/E,MACvB,2DClBN,IAAMgF,EAAa,GAqCJC,EAnCK,WAA+B,IAA9B9H,EAA8BuD,UAAAC,OAAA,QAAAuE,IAAAxE,UAAA,GAAAA,UAAA,GAAtBsE,EAAWG,EAAWzE,UAAAC,OAAA,EAAAD,UAAA,QAAAwE,EAC/C,OAAOC,EAAO5I,MACV,IAAK,gBAED,OADA6I,QAAQC,IAAI,iBACL9E,OAAAkB,EAAA,EAAAlB,CAAA,GACApD,EADP,CAEI+E,UAAY,iBAEpB,IAAK,gBAED,OADAkD,QAAQC,IAAI,iBACL9E,OAAAkB,EAAA,EAAAlB,CAAA,GACApD,EADP,CAEI+E,UAAY,OAEpB,IAAK,kBAED,OADAkD,QAAQC,IAAI,mBACLlI,EAEX,IAAK,iBAED,OADAiI,QAAQC,IAAI,kBACL9E,OAAAkB,EAAA,EAAAlB,CAAA,GACApD,EADP,CAEI+E,UAAY,OAGpB,IAAK,iBAED,OADAkD,QAAQC,IAAI,iBACL9E,OAAAkB,EAAA,EAAAlB,CAAA,GACApD,EADP,CAEI+E,UAAYiD,EAAOzC,IAAI4C,UAE/B,QAAW,OAAOnI,ICjCpB6H,EAAa,CACf3G,SAAW,CACR,CAACE,GAAK,EAAGV,MAAQ,YAAaiB,QAAU,kBACxC,CAACP,GAAK,EAAGV,MAAQ,YAAaiB,QAAU,kBACxC,CAACP,GAAK,EAAGV,MAAQ,YAAaiB,QAAU,oBAsBhCyG,EAlBQ,WAA8B,IAA7BpI,EAA6BuD,UAAAC,OAAA,QAAAuE,IAAAxE,UAAA,GAAAA,UAAA,GAArBsE,EAAUG,EAAWzE,UAAAC,OAAA,EAAAD,UAAA,QAAAwE,EACjD,OAAOC,EAAO5I,MACV,IAAK,iBAED,OADA6I,QAAQC,IAAI,kBAAkBF,EAAOvH,SAC9BT,EACX,IAAK,uBAED,OADAiI,QAAQC,IAAI,0BAA2BF,EAAOzC,KACvCvF,EACX,IAAK,iBAED,OADAiI,QAAQC,IAAI,kBAAkBF,EAAOvH,SAC9BT,EACX,IAAK,uBAED,OADAiI,QAAQC,IAAI,0BAA2BF,EAAOzC,KACvCvF,EACX,QACI,OAAOA,YCTJqI,EAPKC,YAAgB,CAClCpJ,KAAM4I,EACNrH,QAAS2H,EACT9F,UAAWiG,mBACXtI,SAAWuI,6DCIbvI,IAASwI,cATI,CACTC,OAAQ,0CACRC,WAAY,sCACZC,YAAa,6CACbC,UAAW,sBACXC,cAAe,kCACfC,kBAAmB,eACnBC,MAAO,wCAGX/I,IAASqC,YAAY2G,SAAS,CAAEC,uBAAuB,IAExCjJ,SAAf,ECLMkJ,GAAQC,YAAYf,EACtBhG,YACEgH,YAAgBC,IAAMC,kBAAkB,CAACtK,0BAAa6G,+BACtD0D,yBAAeC,IACfC,6BAAmBD,GAAS,CAACE,wBAAyB,EAAMC,YAAc,QAASC,mBAAoB,MAK7GV,GAAMW,oBAAoB3K,KAAK,WAC7B4K,IAASC,OAAO1K,EAAAC,EAAAC,cAACyK,EAAA,EAAD,CAAUd,MAASA,IAAO7J,EAAAC,EAAAC,cAAC0K,EAAD,OAAoBC,SAASC,eAAe,WL0GlF,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMpL,KAAK,SAAAqL,GACjCA,EAAaC","file":"static/js/main.4695143e.chunk.js","sourcesContent":["import React from 'react';\nimport {NavLink} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport {signOut} from '../../store/actions/authActions'\n\nconst SignedInLinks  = (props) => {\n    return (\n        <div>\n            <ul className=\"right\">\n                <li><NavLink to = '/create'>New Project</NavLink></li>\n                <li><a onClick ={props.signOut}>Log Out</a></li>\n                <li><NavLink to = '/' className = 'btn btn-floating lighten-1'> {props.profile.initials}</NavLink></li>\n            </ul>\n            {/* <ul className=\"right hide-on-med-and-down\">\n                <li><NavLink to = '/create'>New Project</NavLink></li>\n                <li><a onClick ={props.signOut}>Log Out</a></li>\n                <li><NavLink to = '/' className = 'btn btn-floating lighten-1'> {props.profile.initials}</NavLink></li>\n            </ul> \n            <ul className=\"sidenav\" id=\"mobile-links\">\n                <li><NavLink to = '/create'>New Project</NavLink></li>\n                <li><a onClick ={props.signOut}>Log Out</a></li>\n                <li><NavLink to = '/' className = 'btn btn-floating lighten-1'> {props.profile.initials}</NavLink></li>\n            </ul>  */}\n        </div>\n    )\n}\n \nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signOut : () => dispatch(signOut())\n    }\n}\n\nexport default connect(null,mapDispatchToProps)(SignedInLinks);","export const signIn  = (creadentials) => {\n    return(dispatch,getState,{getFirebase}) => {\n        const firebase = getFirebase();\n        firebase.auth().signInWithEmailAndPassword(\n            creadentials.email,\n            creadentials.password\n        ).then(()=> {\n            dispatch({type: 'LOGIN_SUCCESS'})\n        }).catch(err=>{\n            dispatch({type:'LOGIN_FAILURE',err})\n        });\n    }\n}\n\nexport const signOut = () => {\n    return (dispatch, getState, {getFirebase}) => {\n      const firebase = getFirebase();\n  \n      firebase.auth().signOut().then(() => {\n        dispatch({ type: 'SIGNOUT_SUCCESS' })\n      });\n    }\n}\n\nexport const signUp = (newUser) => {\n    return(dispatch,getState,{getFirebase,getFirestore}) => {\n        const firebase = getFirebase ();\n        const firestore  = getFirestore();\n        firebase.auth().createUserWithEmailAndPassword(\n            newUser.email,newUser.password\n        ).then((resp)=> { \n            return firestore.collection('users').doc(resp.user.uid).set({\n                firstName : newUser.firstName,\n                lastName : newUser.lastName,\n                initials : newUser.firstName[0] + newUser.lastName[0]\n            })\n        }).then(()=>dispatch({type : 'SIGNUP_SUCCESS'}))\n        .catch(err =>{\n            dispatch({type:'SIGNUP_FAILURE',err})\n        })\n    }\n}","import React from 'react';\nimport {NavLink} from 'react-router-dom';\n\nconst SignedOutLinks  = () => {\n    return (\n        <div>\n            <ul className=\"right\">\n                <li><NavLink to = '/signup'>Sign Up</NavLink></li>\n                <li><NavLink to = '/signin'>Log In</NavLink></li>\n            </ul> \n            {/* <ul className=\"right hide-on-med-and-down\">\n                <li><NavLink to = '/signup'>Sign Up</NavLink></li>\n                <li><NavLink to = '/signin'>Log In</NavLink></li>\n            </ul> \n            <ul className =\"sidenav\" id=\"mobile-links\">\n                <li><NavLink to = '/signup'>Sign Up</NavLink></li>\n                <li><NavLink to = '/signin'>Log In</NavLink></li>\n            </ul>  */}\n        </div>\n    )\n}\n \nexport default SignedOutLinks;\n","import React from 'react';\nimport {Link}  from 'react-router-dom';\nimport SignedInLinks from './SignedInLinks';\nimport SignedOutLinks from './SignedOutLinks';\nimport {connect} from'react-redux';\n\nconst Navbar = (props) => {\n    const {auth,profile} =  props;\n    const links  = auth.uid ?  <SignedInLinks profile = {profile} /> :  <SignedOutLinks />\n    return(\n            <nav className=\"nav-wrapper grey darken-3\">\n                <div className=\"container\">\n                    <Link to ='/' className = \"brand-logo\">Project Plan</Link>\n                    {/* <a href = '' className =\"sidenav-trigger\" data-target=\"mobile-links\">\n                        <i className=\"material-icons\">menu</i>\n                    </a> */}\n                    {links}\n                </div>\n            </nav>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return  { \n        auth : state.firebase.auth, \n        profile : state.firebase.profile\n    }\n}\n\nexport default connect(mapStateToProps)(Navbar);","import React from 'react';\nimport moment from 'moment';\nconst ProjectSummary = ({project})=> {\n    return(\n        <div className=\"card z-depth-0 project-summary\">\n            <div className=\"card-content grey-text text-darken-3\">\n                    <span className=\"card-title\">{project.title}</span>\n                    <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\n                    <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\n            </div>\n        </div>\n    )\n}\n\nexport default ProjectSummary;","import React from 'react';\nimport ProjectSummary from './ProjectSummary';\nimport { Link } from 'react-router-dom'; \n\nconst ProjectList = ({projects}) => {\n return(\n    <div className=\"project-list section\">\n        {projects && projects.map(project => {\n                return(\n                        <Link to={'/project/' + project.id} key = {project.id}>\n                                <ProjectSummary project = {project}  />\n                        </Link>\n                )\n        })}\n    </div>\n )\n} \nexport default ProjectList;","import React from 'react';\nimport moment from 'moment';\nconst Notifications = (props) => {\n    const {notifications} = props;\n    return (\n        <div className=\"section\">\n            <div className=\"card z-depth-0\">\n                <div className=\"card-content\">\n                    <span className=\"card-title\">\n                        Notifications\n                    </span>\n                    <ul className = 'notifications'>\n                                { notifications && notifications.map(item =>{\n                                            return <li key={item.id}>\n                                                        <span className=\"blue-text\">{item.user}  </span>\n                                                        <span>{item.content}</span>\n                                                        <div className=\"note-date grey-text\">{moment(item.time.toDate()).fromNow()}</div>\n                                                    </li>\n                                })}\n                    </ul>\n                </div>\n            </div>\n        </div>\n\n    )\n}\n\nexport default Notifications;\n\n\n","import React, { Component } from 'react'\nimport ProjectList from '../projects/ProjectList'\nimport Notifications from './Notifications'\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\nimport {Redirect} from 'react-router-dom';\n\nclass Dashboard extends Component {\n  render() {\n    const { projects, auth , notifications} = this.props;\n    if (!auth.uid) return <Redirect to = '/signin' />\n    return (\n      <div className=\"dashboard container\">\n        <div className=\"row\">\n          <div className=\"col s12 m6\">\n            <ProjectList projects={projects} />\n          </div>\n          <div className=\"col s12 m5 offset-m1\">\n            <Notifications notifications = {notifications} />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    projects: state.firestore.ordered.projects,\n    auth : state.firebase.auth, \n    notifications : state.firestore.ordered.notifications\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    { collection: 'projects' , orderBy : ['createdAt','desc']},\n    { collection: 'notifications', limit : 5, orderBy : ['time','desc'] }\n  ])\n)(Dashboard)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\nimport {Redirect} from 'react-router-dom';\nimport moment from 'moment';\nimport { Link } from 'react-router-dom'; \n\nconst ProjectDetails = (props) => {\n  const { project,auth , id} = props;\n  if (!auth.uid) return <Redirect to = '/signin' />\n  if (project) {\n    return (\n      <div className=\"container section project-details\">\n        <div className=\"card z-depth-0\">\n          <div className=\"card-content\">\n            <span className=\"card-title\">{project.title}</span>\n            <p>{project.content}</p>\n            <div className=\"input-field\">\n              <Link to={'/updateproject/' + id}>\n                  <button className=\"grey lighten-1 z-depth-0\">Update</button>\n              </Link>\n          </div>\n          </div>\n          <div className=\"card-action grey lighten-4 grey-text\">\n            <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\n            <div>{moment(project.createdAt.toDate()).calendar()}</div>\n          </div>\n        </div>\n      </div>\n    )\n  } else {\n    return (\n      <div className=\"container center\">\n        <p>Loading project...</p>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const id = ownProps.match.params.id;\n  const projects = state.firestore.data.projects;\n  const project = projects ? projects[id] : null\n  return {\n    project: project,\n    auth : state.firebase.auth,\n    id \n  }\n}\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([{\n    collection: 'projects'\n  }])\n)(ProjectDetails)","import React, { Component } from 'react'\nimport  { connect } from 'react-redux'\nimport { signIn } from '../../store/actions/authActions';\nimport {Redirect} from 'react-router-dom';\n\nexport class SignIn extends Component {\n  state = {\n    email : '',\n    password : ''\n  }\n  handleChange = (e)=> { \n    this.setState({\n        ...this.state,\n        [e.target.id] : e.target.value\n    })\n  } \n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.signIn(this.state);\n  }\n  render() {\n    const { authError, auth }  = this.props\n    if (auth.uid) return <Redirect to = '/' />\n    return (\n      <div className= 'container'>\n        <form  onSubmit = {this.handleSubmit} className=\"white\">\n            <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n            <div className=\"input-field\">\n                <label htmlFor=\"email\">Email</label>\n                <input type=\"email\" id = \"email\" onChange = {this.handleChange}/>\n            </div> \n            <div className=\"input-field\">\n                <label htmlFor=\"password\">Password</label>\n                <input type=\"password\" id = \"password\" onChange = {this.handleChange}/>\n            </div> \n            <div className=\"input-field\">\n                <button className=\"grey lighten-1 z-depth-0\">Login</button>\n            </div>\n            <div className=\"red-text\">\n              {authError ? (\n                  <p>{authError}</p>\n              ):null\n              }\n            </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) =>{\n  return{\n    authError : state.auth.authError, \n    auth : state.firebase.auth\n  }\n}\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signIn : (creds) => dispatch(signIn(creds))\n  } \n}\n\n\n\nexport default connect(mapStateToProps,mapDispatchToProps)(SignIn);\n","import React, { Component } from 'react';\nimport {Redirect} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport {signUp} from '../../store/actions/authActions';\n\nexport class SignUp extends Component {\n  state = {\n    email : '',\n    password : '',\n    firstName : '',\n    lastName : ''\n  }\n  handleChange = (e)=> { \n    this.setState({\n        ...this.state,\n        [e.target.id] : e.target.value\n    })\n  } \n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.signUp(this.state);\n  }\n  render() {\n    const { auth, authError }  = this.props;\n    if (auth.uid) return <Redirect to = '/' />\n    return (\n      \n      <div className= 'container'>\n        <form  onSubmit = {this.handleSubmit} className=\"white\">\n            <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n            <div className=\"input-field\">\n                <label htmlFor=\"firstname\">First Name</label>\n                <input type=\"text\" id = \"firstName\" onChange = {this.handleChange}/>\n            </div> \n            <div className=\"input-field\">\n                <label htmlFor=\"lastname\">Last Name</label>\n                <input type=\"text\" id = \"lastName\" onChange = {this.handleChange}/>\n            </div> \n            <div className=\"input-field\">\n                <label htmlFor=\"email\">Email</label>\n                <input type=\"email\" id = \"email\" onChange = {this.handleChange}/>\n            </div> \n            <div className=\"input-field\">\n                <label htmlFor=\"password\">Password</label>\n                <input type=\"password\" id = \"password\" onChange = {this.handleChange}/>\n            </div> \n            <div className=\"input-field\">\n                <button className=\"grey lighten-1 z-depth-0\">Sign Up</button>\n                <div className=\"red-text\">\n                  {authError  ? <p>{authError}</p> : null }\n                </div>\n            </div>    \n        </form>\n      </div>\n    )\n  }\n}\nconst mapStateToProps = (state) =>{\n  return{\n    auth : state.firebase.auth,\n    authError : state.auth.authError\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => { \n  return{\n    signUp : (newUser) => dispatch(signUp (newUser))\n  }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(SignUp);\n","import React, { Component } from 'react';\nimport {connect} from 'react-redux';\nimport {createProject} from '../../store/actions/projectActions';\nimport {Redirect} from 'react-router-dom';\n\nexport class CreateProject extends Component {\n  state = {\n    title : '',\n    content: ''\n  }\n  handleChange = (e)=> { \n    this.setState({\n        ...this.state,\n        [e.target.id] : e.target.value\n    })\n  } \n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.createProject(this.state)\n    this.props.history.push('/')\n  }\n  render() {\n    const { auth } = this.props;\n    if (!auth.uid) return <Redirect to = '/signin' />\n    return (\n      <div className= 'container'>\n        <form  onSubmit = {this.handleSubmit} className=\"white\">\n            <h5 className=\"grey-text text-darken-3\">Create Project</h5>\n            <div className=\"input-field\">\n                <label htmlFor=\"title\">Title</label>\n                <input type=\"text\" id = \"title\" onChange = {this.handleChange}/>\n            </div> \n            <div className=\"input-field\">\n                <label htmlFor=\"content\">Project Content</label>\n                <textarea id=\"content\" className=\"materialize-textarea\" onChange = {this.handleChange} ></textarea>\n            </div> \n            <div className=\"input-field\">\n                <button className=\"grey lighten-1 z-depth-0\">Create</button>\n            </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state)  =>{\n  return {\n    auth  : state.firebase.auth\n  }\n}\n\nconst mapDispatchToProps = (dispatch)  =>{\n  return {\n    createProject : (project) => dispatch(createProject(project))\n  }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(CreateProject);\n","export const createProject = (project) => {\n    return (dispatch,getState,{getFirebase,getFirestore}) =>{\n        const firestore  = getFirestore();\n        const profile = getState().firebase.profile;\n        const authorId = getState().firebase.auth.uid;\n        firestore.collection('projects').add({\n          ...project,\n          authorFirstName : profile.firstName,\n          authorLastName  :profile.lastName,\n          authorId : authorId,\n          createdAt : new Date()\n        }).then(() => {\n          dispatch({type:'CREATE_PROJECT',project})\n        }).catch((err) =>{\n          dispatch({type : 'CREATE_PROJECT_ERROR',err})\n        }) \n    }\n}\n\nexport const updateProject = (state) => {\n  return (dispatch,getState,{getFirebase,getFirestore}) =>{\n      const firestore  = getFirestore();\n      const ref = firestore.collection('projects').doc(state.project.id);\n      ref.set(state.project)\n      .then( dispatch({type:'UPDATE_PROJECT',}))\n      .catch((err) =>{\n        dispatch({type : 'UPDATE_PROJECT_ERROR',err})\n      }) \n  }\n}","import React, { Component } from 'react';\nimport {connect} from 'react-redux';\nimport {updateProject} from '../../store/actions/projectActions';\nimport {Redirect} from 'react-router-dom';\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\n\nexport class UpdateProject extends Component {\n  state = {\n    project :'',\n    flag : true\n  }\n  handleChange = (e)=> { \n    const newProject = this.state.project\n    newProject[e.target.id] = e.target.value\n    this.setState({\n        ...this.state,\n        project : newProject\n    })\n  } \n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.updateProject(this.state)\n    this.props.history.push('/project/'+this.state.project.id)\n  }\n  render() {\n    const {auth,project,id } = this.props;\n    if (!auth.uid) return <Redirect to = '/signin' />\n    if (project) {\n      if (this.state.flag) {\n        this.state.project = project\n        this.state.project.id= id\n        this.state.flag = false\n      }\n    return (\n      <div className= 'container'>\n        <form  onSubmit = {this.handleSubmit} className=\"white\">\n            <h5 className=\"grey-text text-darken-3\">Update Project</h5>\n            <br/>\n            <label htmlFor=\"title\">Title</label>\n            <div className=\"input-field\">\n              <input type=\"text\" id = \"title\" onChange = {this.handleChange} value = {this.state.project.title}/>\n            </div>\n            <label htmlFor=\"content\">Project Content</label> \n            <div className=\"input-field\"> \n                <textarea id=\"content\" className=\"materialize-textarea\" onChange = {this.handleChange} value = {this.state.project.content}></textarea>\n            </div> \n            <br />\n            <div className=\"input-field\">\n                <button className=\"grey lighten-1 z-depth-0\">Update</button>\n            </div>\n        </form>\n      </div>\n    )\n    } else {\n    return (\n      <div className=\"container center\">\n        <p>Loading project...</p>\n      </div>\n    )\n    }\n  }\n}\n\nconst mapStateToProps = (state,ownProps)  =>{\n  const id = ownProps.match.params.id;\n  const projects = state.firestore.data.projects;\n  const project = projects ? projects[id] : null\n  return {\n    auth  : state.firebase.auth, \n    project : project,\n    id : id\n  }\n}\n\nconst mapDispatchToProps = (dispatch)  =>{\n  return {\n    updateProject : (project) => dispatch(updateProject(project))\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps,mapDispatchToProps),\n  connect(mapStateToProps,mapDispatchToProps),\n  firestoreConnect([{\n    collection : 'projects'\n  }]))\n  (UpdateProject);\n","import React from 'react';\nimport {BrowserRouter,Switch,Route} from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Dashboard from './components/dashboard/Dashboard';\nimport ProjectDetails from './components/projects/ProjectDetails';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateProject from './components/projects/CreateProject';\nimport UpdateProject from './components/projects/UpdateProject';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <Navbar />\n          <Switch>\n            <Route exact path = '/' component = {Dashboard}/>\n            <Route path = '/project/:id' component = {ProjectDetails} />\n            <Route path= '/signin' component = {SignIn} />\n            <Route path= '/signup' component = {SignUp} />  \n            <Route path= '/create' component = {CreateProject} />          \n            <Route path= '/updateproject/:id' component = {UpdateProject} /> \n          </Switch>\n        </header>\n      </div>\n    </BrowserRouter>\n  );\n} \n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState  = {}\n\nconst authReducer = (state = initState, action) => {\n    switch(action.type) {\n        case 'LOGIN_FAILURE' :\n            console.log(\"Login Failure\");\n            return {\n                ...state,\n                authError : 'Login Failed'\n            }\n        case 'LOGIN_SUCCESS' :\n            console.log(\"Login Success\");\n            return {\n                ...state,\n                authError : null\n            }\n        case 'SIGNOUT_SUCCESS' :\n            console.log(\"Signout Success\");\n            return state;\n \n        case 'SIGNUP_SUCCESS' :\n            console.log(\"Signup Success\");\n            return {\n                ...state,\n                authError : null\n            };\n\n        case 'SIGNUP_FAILURE' : \n            console.log('Signup Failed');\n            return {\n                ...state,\n                authError : action.err.message\n            }\n        default  : return state;\n    }  \n}\n\nexport default authReducer;","const initState  = {\n    projects : [\n       {id : 1, title : 'Project 1', content : 'blah blah blah'},\n       {id : 2, title : 'Project 2', content : 'blah blah blah'},\n       {id : 3, title : 'Project 3', content : 'blah blah blah'} \n    ]\n}\n\nconst projectReducer = (state = initState,action) => {  \n    switch(action.type){\n        case 'CREATE_PROJECT' :\n            console.log('created project',action.project);\n            return state;\n        case 'CREATE_PROJECT_ERROR' :\n            console.log('create project error:  ', action.err);\n            return state;\n        case 'UPDATE_PROJECT' :\n            console.log('updated project',action.project);\n            return state;\n        case 'UPDATE_PROJECT_ERROR' :\n            console.log('update project error:  ', action.err);\n            return state;\n        default :\n            return state;\n    }    \n}\nexport default projectReducer; ","import authReducer from './authReducer'\nimport projectReducer from './projectReducer'\nimport { combineReducers } from 'redux'\nimport { firestoreReducer } from 'redux-firestore';\nimport {firebaseReducer} from 'react-redux-firebase';\n\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  project: projectReducer,\n  firestore: firestoreReducer,\n  firebase : firebaseReducer\n});\n\nexport default rootReducer","\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\n// Replace this with your own config details\nvar config = {\n    apiKey: \"AIzaSyDxcrsY_lQql_RGakvkWb6p9tbYp2RWzGM\",\n    authDomain: \"projectplan-backend.firebaseapp.com\",\n    databaseURL: \"https://projectplan-backend.firebaseio.com\",\n    projectId: \"projectplan-backend\",\n    storageBucket: \"projectplan-backend.appspot.com\",\n    messagingSenderId: \"641094132766\",\n    appId: \"1:641094132766:web:24d29d4163b85aba\"\n  };\nfirebase.initializeApp(config);\nfirebase.firestore().settings({ timestampsInSnapshots: true });\n\nexport default firebase ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './store/reducers/rootReducer';\nimport { Provider } from 'react-redux';\nimport thunk  from 'redux-thunk';\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport fbConfig from './config/fbConfig'\n\nconst store = createStore(rootReducer,\n    compose(\n      applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n      reduxFirestore(fbConfig), // redux bindings for firestore\n      reactReduxFirebase(fbConfig,{useFirestoreForProfile : true, userProfile : 'users', attachAuthIsReady : true}) // redux binding for firebase  \n    )\n  );\n  \n\nstore.firebaseAuthIsReady.then(()=>{\n  ReactDOM.render(<Provider store = {store}><App /></Provider>, document.getElementById('root')); \n})\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}